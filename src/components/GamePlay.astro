---
const turns = Array(9).fill("x--turn");
---

<div class="game__play">
  {
    turns.map((turn) => (
      <button class={`game__play--btn ${turn}`} type="button" />
    ))
  }
</div>

<style lang="scss">
  @use "../styles/abstracts/" as *;

  .game {
    &__play {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: $size-5;
    }

    &__play--btn {
      background: $color-neutral-800;
      border: 0;
      border-radius: $border-radius-1;
      box-shadow: $box-shadow-1;
      cursor: pointer;
      display: grid;
      place-content: center;
      max-width: 8.75rem;
      aspect-ratio: 1;

      & > img {
        width: clamp(2.5rem, -0.9286rem + 17.1429vw, 4rem);
        height: clamp(2.5rem, -0.9286rem + 17.1429vw, 4rem);
      }

      &.x--turn:is(:hover, :focus) {
        background-image: url(/assets/images/icon-x-outline.svg);
        background-repeat: no-repeat;
        background-position: center;
        background-size: clamp(2.5rem, -0.9286rem + 17.1429vw, 4rem)
          clamp(2.5rem, -0.9286rem + 17.1429vw, 4rem);
      }
      &.o--turn:is(:hover, :focus) {
        background-image: url(/assets/images/icon-o-outline.svg);
        background-repeat: no-repeat;
        background-position: center;
        background-size: clamp(2.5rem, -0.9286rem + 17.1429vw, 4rem)
          clamp(2.5rem, -0.9286rem + 17.1429vw, 4rem);
      }

      &:focus {
        outline: 2px solid $color-neutral-400;
        outline-offset: 4px;
      }

      &.x--turn:focus {
        outline: 2px solid $color-primary-400;
        outline-offset: 4px;
      }

      &.o--turn:focus {
        outline: 2px solid $color-accent-400;
        outline-offset: 4px;
      }
    }
  }
</style>
